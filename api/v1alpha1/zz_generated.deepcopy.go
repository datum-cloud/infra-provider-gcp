//go:build !ignore_autogenerated

// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDownstreamWorkload) DeepCopyInto(out *ClusterDownstreamWorkload) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDownstreamWorkload.
func (in *ClusterDownstreamWorkload) DeepCopy() *ClusterDownstreamWorkload {
	if in == nil {
		return nil
	}
	out := new(ClusterDownstreamWorkload)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterDownstreamWorkload) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDownstreamWorkloadDeployment) DeepCopyInto(out *ClusterDownstreamWorkloadDeployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDownstreamWorkloadDeployment.
func (in *ClusterDownstreamWorkloadDeployment) DeepCopy() *ClusterDownstreamWorkloadDeployment {
	if in == nil {
		return nil
	}
	out := new(ClusterDownstreamWorkloadDeployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterDownstreamWorkloadDeployment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDownstreamWorkloadDeploymentList) DeepCopyInto(out *ClusterDownstreamWorkloadDeploymentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterDownstreamWorkloadDeployment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDownstreamWorkloadDeploymentList.
func (in *ClusterDownstreamWorkloadDeploymentList) DeepCopy() *ClusterDownstreamWorkloadDeploymentList {
	if in == nil {
		return nil
	}
	out := new(ClusterDownstreamWorkloadDeploymentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterDownstreamWorkloadDeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDownstreamWorkloadDeploymentSpec) DeepCopyInto(out *ClusterDownstreamWorkloadDeploymentSpec) {
	*out = *in
	out.WorkloadDeploymentRef = in.WorkloadDeploymentRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDownstreamWorkloadDeploymentSpec.
func (in *ClusterDownstreamWorkloadDeploymentSpec) DeepCopy() *ClusterDownstreamWorkloadDeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterDownstreamWorkloadDeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDownstreamWorkloadDeploymentStatus) DeepCopyInto(out *ClusterDownstreamWorkloadDeploymentStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceRefs != nil {
		in, out := &in.ResourceRefs, &out.ResourceRefs
		*out = make([]corev1.ObjectReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDownstreamWorkloadDeploymentStatus.
func (in *ClusterDownstreamWorkloadDeploymentStatus) DeepCopy() *ClusterDownstreamWorkloadDeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterDownstreamWorkloadDeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDownstreamWorkloadList) DeepCopyInto(out *ClusterDownstreamWorkloadList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterDownstreamWorkload, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDownstreamWorkloadList.
func (in *ClusterDownstreamWorkloadList) DeepCopy() *ClusterDownstreamWorkloadList {
	if in == nil {
		return nil
	}
	out := new(ClusterDownstreamWorkloadList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterDownstreamWorkloadList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDownstreamWorkloadSpec) DeepCopyInto(out *ClusterDownstreamWorkloadSpec) {
	*out = *in
	out.WorkloadDeploymentRef = in.WorkloadDeploymentRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDownstreamWorkloadSpec.
func (in *ClusterDownstreamWorkloadSpec) DeepCopy() *ClusterDownstreamWorkloadSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterDownstreamWorkloadSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterDownstreamWorkloadStatus) DeepCopyInto(out *ClusterDownstreamWorkloadStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ResourceRefs != nil {
		in, out := &in.ResourceRefs, &out.ResourceRefs
		*out = make([]corev1.ObjectReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterDownstreamWorkloadStatus.
func (in *ClusterDownstreamWorkloadStatus) DeepCopy() *ClusterDownstreamWorkloadStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterDownstreamWorkloadStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadDeploymentRef) DeepCopyInto(out *WorkloadDeploymentRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadDeploymentRef.
func (in *WorkloadDeploymentRef) DeepCopy() *WorkloadDeploymentRef {
	if in == nil {
		return nil
	}
	out := new(WorkloadDeploymentRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkloadRef) DeepCopyInto(out *WorkloadRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkloadRef.
func (in *WorkloadRef) DeepCopy() *WorkloadRef {
	if in == nil {
		return nil
	}
	out := new(WorkloadRef)
	in.DeepCopyInto(out)
	return out
}

//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by defaulter-gen. DO NOT EDIT.

package config

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// RegisterDefaults adds defaulters functions to the given scheme.
// Public to allow building arbitrary schemes.
// All generated defaulters are covering - they call all nested defaulters.
func RegisterDefaults(scheme *runtime.Scheme) error {
	scheme.AddTypeDefaultingFunc(&GCPProvider{}, func(obj interface{}) { SetObjectDefaults_GCPProvider(obj.(*GCPProvider)) })
	return nil
}

func SetObjectDefaults_GCPProvider(in *GCPProvider) {
	SetDefaults_MetricsServerConfig(&in.MetricsServer)
	if in.MetricsServer.SecureServing == nil {
		var ptrVar1 bool = true
		in.MetricsServer.SecureServing = &ptrVar1
	}
	if in.MetricsServer.BindAddress == "" {
		in.MetricsServer.BindAddress = "0"
	}
	if in.MetricsServer.TLS.CertName == "" {
		in.MetricsServer.TLS.CertName = "tls.crt"
	}
	if in.MetricsServer.TLS.KeyName == "" {
		in.MetricsServer.TLS.KeyName = "tls.key"
	}
	SetDefaults_WebhookServerConfig(&in.WebhookServer)
	if in.WebhookServer.Port == 0 {
		in.WebhookServer.Port = 9443
	}
	if in.WebhookServer.TLS.CertName == "" {
		in.WebhookServer.TLS.CertName = "tls.crt"
	}
	if in.WebhookServer.TLS.KeyName == "" {
		in.WebhookServer.TLS.KeyName = "tls.key"
	}
	if in.Discovery.Mode == "" {
		in.Discovery.Mode = "single"
	}
	if in.LocationClassName == "" {
		in.LocationClassName = "self-managed"
	}
}

//go:build !ignore_autogenerated

// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by controller-gen. DO NOT EDIT.

package config

import (
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveryConfig) DeepCopyInto(out *DiscoveryConfig) {
	*out = *in
	if in.LabelSelector != nil {
		in, out := &in.LabelSelector, &out.LabelSelector
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveryConfig.
func (in *DiscoveryConfig) DeepCopy() *DiscoveryConfig {
	if in == nil {
		return nil
	}
	out := new(DiscoveryConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveryProviderConfigStrategy) DeepCopyInto(out *DiscoveryProviderConfigStrategy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveryProviderConfigStrategy.
func (in *DiscoveryProviderConfigStrategy) DeepCopy() *DiscoveryProviderConfigStrategy {
	if in == nil {
		return nil
	}
	out := new(DiscoveryProviderConfigStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DownstreamResourceManagementConfig) DeepCopyInto(out *DownstreamResourceManagementConfig) {
	*out = *in
	out.ProviderConfigStrategy = in.ProviderConfigStrategy
	if in.ManagedResourceLabels != nil {
		in, out := &in.ManagedResourceLabels, &out.ManagedResourceLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DownstreamResourceManagementConfig.
func (in *DownstreamResourceManagementConfig) DeepCopy() *DownstreamResourceManagementConfig {
	if in == nil {
		return nil
	}
	out := new(DownstreamResourceManagementConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GCPProvider) DeepCopyInto(out *GCPProvider) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.MetricsServer.DeepCopyInto(&out.MetricsServer)
	in.WebhookServer.DeepCopyInto(&out.WebhookServer)
	in.Discovery.DeepCopyInto(&out.Discovery)
	in.DownstreamResourceManagement.DeepCopyInto(&out.DownstreamResourceManagement)
	if in.ImageMap != nil {
		in, out := &in.ImageMap, &out.ImageMap
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MachineTypeMap != nil {
		in, out := &in.MachineTypeMap, &out.MachineTypeMap
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GCPProvider.
func (in *GCPProvider) DeepCopy() *GCPProvider {
	if in == nil {
		return nil
	}
	out := new(GCPProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GCPProvider) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetricsServerConfig) DeepCopyInto(out *MetricsServerConfig) {
	*out = *in
	if in.SecureServing != nil {
		in, out := &in.SecureServing, &out.SecureServing
		*out = new(bool)
		**out = **in
	}
	in.TLS.DeepCopyInto(&out.TLS)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetricsServerConfig.
func (in *MetricsServerConfig) DeepCopy() *MetricsServerConfig {
	if in == nil {
		return nil
	}
	out := new(MetricsServerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderConfigStrategy) DeepCopyInto(out *ProviderConfigStrategy) {
	*out = *in
	out.Single = in.Single
	out.Discovery = in.Discovery
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderConfigStrategy.
func (in *ProviderConfigStrategy) DeepCopy() *ProviderConfigStrategy {
	if in == nil {
		return nil
	}
	out := new(ProviderConfigStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SingleProviderConfigStrategy) DeepCopyInto(out *SingleProviderConfigStrategy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SingleProviderConfigStrategy.
func (in *SingleProviderConfigStrategy) DeepCopy() *SingleProviderConfigStrategy {
	if in == nil {
		return nil
	}
	out := new(SingleProviderConfigStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfig) DeepCopyInto(out *TLSConfig) {
	*out = *in
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.ObjectReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfig.
func (in *TLSConfig) DeepCopy() *TLSConfig {
	if in == nil {
		return nil
	}
	out := new(TLSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookServerConfig) DeepCopyInto(out *WebhookServerConfig) {
	*out = *in
	in.TLS.DeepCopyInto(&out.TLS)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookServerConfig.
func (in *WebhookServerConfig) DeepCopy() *WebhookServerConfig {
	if in == nil {
		return nil
	}
	out := new(WebhookServerConfig)
	in.DeepCopyInto(out)
	return out
}
